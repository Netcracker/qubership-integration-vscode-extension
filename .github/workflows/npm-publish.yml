---

  # This GitHub Actions workflow can be triggered in three ways:
  # 1. Automatically on push to any branch (runs in dry-run mode for safety)
  # 2. Automatically publish npm on push if package.json version contains -dev (publishing for testing purposes)
  # 3. Manually via workflow_dispatch with configurable parameters

  name: Publish NPM package

  run-name: NPM Package${{ (github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && inputs.dry-run)) && ' - Test' || ' - Publish' }}${{ (github.event_name == 'workflow_dispatch' && !inputs.dry-run && inputs.version) && format(' {0}', inputs.version) || '' }}

  on:
    push:
      branches:
        - '**'
    workflow_dispatch:
      inputs:
        version:
          description: 'Release version for NPM (e.g., 1.0.0)'
          required: false
          type: string
        scope:
          description: 'NPM scope for the package'
          required: false
          type: string
          default: '@netcracker'
        node-version:
          required: false
          type: string
          default: "22.x"
        registry-url:
          required: false
          type: string
          default: "https://npm.pkg.github.com"
        update-nc-dependency:
          required: false
          type: boolean
          default: false
        dry-run:
          description: 'Run in dry-run mode (no actual publishing)'
          required: false
          type: boolean
          default: false
        npm-dist-tag:
          description: 'NPM distribution tag'
          required: false
          type: string
          default: 'latest'

  permissions:
    contents: write
    packages: write

  jobs:
    prepare-version:
      runs-on: ubuntu-latest
      outputs:
        publish_version: ${{ steps.set_version.outputs.publish_version }}
        is_dev: ${{ steps.set_version.outputs.is_dev }}
      steps:
        - uses: actions/checkout@v4

        - name: Get package version
          id: get_version
          run: echo "package_version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

        - name: Set publish version
          id: set_version
          run: |
            VERSION=${{ steps.get_version.outputs.package_version }}
            if [[ "$VERSION" == *"-dev" ]]; then
              TIMESTAMP=$(date +'%Y%m%d%H%M%S')
              NEW_VERSION="${VERSION}.${TIMESTAMP}"
              echo "publish_version=$NEW_VERSION" >> $GITHUB_OUTPUT
              echo "is_dev=true" >> $GITHUB_OUTPUT
            else
              echo "publish_version=$VERSION" >> $GITHUB_OUTPUT
              echo "is_dev=false" >> $GITHUB_OUTPUT
            fi

    npm-publish:
      needs: prepare-version
      uses: ./.github/workflows/re-npm-publish.yml
      with:
        version: ${{ github.event_name == 'workflow_dispatch' && inputs.version || needs.prepare-version.outputs.publish_version }}
        scope: ${{ github.event_name == 'workflow_dispatch' && inputs.scope || '@netcracker' }}
        node-version: ${{ github.event_name == 'workflow_dispatch' && inputs.node-version || '22.x' }}
        registry-url: ${{ github.event_name == 'workflow_dispatch' && inputs.registry-url || 'https://npm.pkg.github.com' }}
        update-nc-dependency: ${{ github.event_name == 'workflow_dispatch' && inputs.update-nc-dependency || false }}
        dry-run: ${{ (github.event_name == 'push' && needs.prepare-version.outputs.is_dev != 'true') || (github.event_name == 'workflow_dispatch' && inputs.dry-run) }}
        dist-tag: ${{ github.event_name == 'push' && needs.prepare-version.outputs.is_dev == 'true' && 'dev' || (github.event_name == 'workflow_dispatch' && inputs.npm-dist-tag != '' && inputs.npm-dist-tag) || 'latest' }}
        ref: ${{ github.ref_name }}
        is_dev: ${{ needs.prepare-version.outputs.is_dev == 'true' }}
      secrets: inherit
